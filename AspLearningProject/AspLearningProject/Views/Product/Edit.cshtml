@model AspLearningProject.Models.ProductEditViewModel



<fieldset>
    <div class="panel-group" style="width:50%; margin-left:150px">
        <div class="panel panel-primary">
            <div class="panel-heading"><h4>@ViewBag.Title</h4></div>
            
            <div class="panel-body">
                @using (Html.BeginForm(FormMethod.Post, new { htmlAttributes = new { @class = "form-horizontal" } }))
                {
                   @Html.ValidationSummary(false, string.Empty,new  {@class = "invalid-feedback  d-block"})
                    <div class="form-group visually-hidden">
                        @Html.LabelFor(x => x.Product.ProductID)
                        <div class="col-sm-10">
                            @Html.EditorFor(x => x.Product.ProductID,new { htmlAttributes =  new { @class = "form-control"}})
                        </div>                        
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Product.ProductName)
                        <div class="col-sm-10">
                            @Html.EditorFor(x => x.Product.ProductName,new { htmlAttributes =  new { @class = "form-control"}})     
                        </div>
                        <div>
                           @Html.ValidationMessageFor(x => x.Product.ProductName, string.Empty, new { @class = "invalid-feedback  d-block"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Suppliers)
                        <div class="col-sm-10">
                        @Html.DropDownListFor(x => x.Product.SupplierID, new SelectList(Model.Suppliers, "SupplierID", "CompanyName"), new { @class = "form-control"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Categories)
                        <div class="col-sm-10">
                            @Html.DropDownListFor(x => x.Product.CategoryID, new SelectList(Model.Categories, "CategoryID", "CategoryName"), new { @class = "form-control"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Product.QuantityPerUnit)
                        <div class="col-sm-10">
                            @Html.EditorFor(x => x.Product.QuantityPerUnit,new { htmlAttributes =  new { @class = "form-control"}})
                        </div>
                        <div>
                            @Html.ValidationMessageFor(x => x.Product.QuantityPerUnit, string.Empty, new { @class = "invalid-feedback  d-block"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Product.UnitPrice)
                        <div class="col-sm-10">
                            @Html.EditorFor(x => x.Product.UnitPrice, new { htmlAttributes =  new { @class = "form-control"}})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Product.UnitsInStock)
                        <div class="col-sm-10">
                            @Html.EditorFor(x => x.Product.UnitsInStock,new { htmlAttributes =   new { @class = "form-control"}})
                        </div>
                    </div>                    
                    <div class="form-group">
                        @Html.LabelFor(x => x.Product.UnitsOnOrder)
                        <div class="col-sm-10">
                            @Html.EditorFor(x => x.Product.UnitsOnOrder,new { htmlAttributes =   new { @class = "form-control"},})
                        </div>
                    </div>           
                    <div class="form-outline">
                        @Html.LabelFor(x => x.Product.ReorderLevel)
                        <div class="col-sm-10">
                            @Html.EditorFor(x => x.Product.ReorderLevel,new { htmlAttributes =   new { @class = "form-control"}})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Product.Discontinued)
                        @Html.CheckBoxFor(x => x.Product.Discontinued)
                        <div>
                            @Html.ValidationMessageFor(x => x.Product.Discontinued, string.Empty, new { @class = "invalid-feedback  d-block"})
                        </div>
                    </div>
        <p>
            <button type="submit" class="btn btn-secondary btn-floating mx-1">Save Product</button>
        </p>
    }
            </div>
        </div>
    </div>
</fieldset>